<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on rivten - blog</title><link>https://rivten.github.io/posts/</link><description>Recent content in Posts on rivten - blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Oct 2022 22:07:35 +0200</lastBuildDate><atom:link href="https://rivten.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>POSTing forms</title><link>https://rivten.github.io/posts/post_and_forms/</link><pubDate>Thu, 13 Oct 2022 22:07:35 +0200</pubDate><guid>https://rivten.github.io/posts/post_and_forms/</guid><description>I was doing some TryHackMe recently. And, while I like learning high-level tools such as BurpSuite, I really love hacking stuff with just the basic tool. The basic tool being curl in that situation.
But there was one stuff that I would always get wrong, no matter what. It&amp;rsquo;s writing the curl command for forms. How do you encode form data ? What are these encodings ? And… why oh why ?</description></item><item><title>Git setup with fork</title><link>https://rivten.github.io/posts/git_setup_with_fork/</link><pubDate>Sun, 25 Sep 2022 19:19:37 +0200</pubDate><guid>https://rivten.github.io/posts/git_setup_with_fork/</guid><description>When I work on a git project that I forked from some place, it&amp;rsquo;s great to have an automatic setup that pulls from the original repo and push to the forked repo.
I name the fork repo fork and the original repo upstream.
Here&amp;rsquo;s what could look like the .git/config file of a git repository
[core] # stuff [remote] pushDefault = fork [push] default = current [remote &amp;#34;fork&amp;#34;] url = # fork_url # stuff [remote &amp;#34;upstream&amp;#34;] url = # upstream_url # stuff [branch &amp;#34;master&amp;#34;] # the main branch to pull from upstream remote = upstream # stuff [branch &amp;#34;another_branch&amp;#34;] # a branch I&amp;#39;m working on locally remote = fork # stuff # more branch configurations… Then the working process is pretty simple.</description></item><item><title>Stuff</title><link>https://rivten.github.io/posts/stuff/</link><pubDate>Sun, 25 Sep 2022 10:20:56 +0200</pubDate><guid>https://rivten.github.io/posts/stuff/</guid><description>These are links that I find useful.
About io_uring Julia Evan&amp;rsquo;s blog About memory ordering Amos&amp;rsquo; blog Beej&amp;rsquo;s Guide to Unix Interprocess Communication Beej&amp;rsquo;s Guide to Network Programming Faultlore&amp;rsquo;s blog Fabian Giesen&amp;rsquo;s blog Floooh&amp;rsquo;s blog Bruce Dawson&amp;rsquo;s blog Bitsquid&amp;rsquo;s blog Eli Bendersky&amp;rsquo;s blog John Regehr&amp;rsquo;s blog Preshing&amp;rsquo;s blog</description></item><item><title>Compilation of 100+ 3D graphics academic papers</title><link>https://rivten.github.io/posts/2018-08-03-graphics-article-list/</link><pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate><guid>https://rivten.github.io/posts/2018-08-03-graphics-article-list/</guid><description>About a little more than a year ago, I followed an intensive Computer Graphics course that studied a lot of academic materials and engaged us into reading more scientific papers. Throughout the course, we studied in-class and by ourselves several articles spanning lots of sub-topics of 3D graphics.
I have compiled that list here. Note that this list is by no means exhaustive, might not span the full knowledge (or even possible the basic knowledge) of a specific subtopic and might be lacking very important reference.</description></item><item><title>TL;DR of the paper 'High-Performance Procedural Noise using a Histogram-Preserving Blending Operator'</title><link>https://rivten.github.io/posts/2018-07-07-tldr-noise-histogram/</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><guid>https://rivten.github.io/posts/2018-07-07-tldr-noise-histogram/</guid><description>Inspired by the work of Eric Arnebäck, I wanted to try my own TLDR of graphics acamedic papers. In here, I want to describe the work of Eric Heitz and Fabrice Neyet in the paper High-Performance Procedural Noise using a Histogram-Preserving Blending Operator. Please note that the images are directly taken from the paper and are not mine.
The problem Let&amp;rsquo;s say an artist made a texture for the ground in your game, but he only did a small patch of the ground and you want to have the pattern repeat on a ground that is way larger than what the artist drew.</description></item><item><title>Article Study : Surface Simplification using Quadric Error Metrics</title><link>https://rivten.github.io/posts/2016-11-05-surface_simplification/</link><pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate><guid>https://rivten.github.io/posts/2016-11-05-surface_simplification/</guid><description>An article study series ? Lately, I have been reading a lot of scientific papers about various topics : computer graphics, physics or mesh processing. I found that it is very interesting to have an insight about a particular field and understand what is at stake and where the current research efforts are today.
It struck me that I could do this while watching Casey Muratori&amp;rsquo;s video on Papers we Love.</description></item><item><title>Welcome !</title><link>https://rivten.github.io/posts/2016-09-19-welcome/</link><pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate><guid>https://rivten.github.io/posts/2016-09-19-welcome/</guid><description>Welcome on my blog !</description></item></channel></rss>